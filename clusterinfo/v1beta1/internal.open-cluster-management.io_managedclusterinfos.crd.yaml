apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: managedclusterinfos.internal.open-cluster-management.io
spec:
  group: internal.open-cluster-management.io
  names:
    kind: ManagedClusterInfo
    listKind: ManagedClusterInfoList
    plural: managedclusterinfos
    singular: managedclusterinfo
  preserveUnknownFields: false
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ManagedClusterInfo represents the information of managed cluster that acm hub needs to know
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the information of the Cluster.
              type: object
              properties:
                loggingCA:
                  description: LoggingCA is the ca data for logging server to authorize apiserver
                  type: string
                  format: byte
                masterEndpoint:
                  description: MasterEndpoint shows the apiserver endpoint of managed cluster
                  type: string
            status:
              description: Status represents the desired status of the Cluster
              type: object
              properties:
                cloudVendor:
                  description: CloudVendor describes the cloud provider for the managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim product.open-cluster-management.io instead.
                  type: string
                clusterID:
                  description: ClusterID is the identifier of managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim id.openshift.io instead.
                  type: string
                conditions:
                  description: Conditions contains condition information for a managed cluster
                  type: array
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                consoleURL:
                  description: ConsoleURL shows the url of console in managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim consoleurl.cluster.open-cluster-management.io instead.
                  type: string
                distributionInfo:
                  description: DistributionInfo is the information about distribution of managed cluster
                  type: object
                  properties:
                    ocp:
                      description: OCP is the distribution information of OCP managed cluster, is matched when the Type is OCP.
                      type: object
                      properties:
                        availableUpdates:
                          description: AvailableUpdates contains the list of update versions that are appropriate for the manage cluster. Deprecated in release 2.3 and will be removed in the future. Use VersionAvailableUpdates instead.
                          type: array
                          items:
                            type: string
                        channel:
                          description: Channel is an identifier for explicitly requesting that a non-default set of updates be applied to this cluster. The default channel will be contain stable updates that are appropriate for production clusters.
                          type: string
                        desired:
                          description: desired is the version that the cluster is reconciling towards. If the cluster is not yet fully initialized desired will be set with the information available, which may be an image or a tag.
                          type: object
                          properties:
                            channels:
                              description: channels is the set of Cincinnati channels to which the release currently belongs.
                              type: array
                              items:
                                type: string
                            image:
                              description: image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.
                              type: string
                            url:
                              description: url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.
                              type: string
                            version:
                              description: version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.
                              type: string
                        desiredVersion:
                          description: DesiredVersion is the version that the cluster is reconciling towards. Deprecated in release 2.3 and will be removed in the future. User Desired instead.
                          type: string
                        lastAppliedAPIServerURL:
                          description: LastAppliedAPIServerURL is a valid URI with scheme 'https', address and optionally a port (defaulting to 443). it can be used by components like the web console to tell users where to find the Kubernetes API. This is the api server url that has been applied to the managedcluster resource successfully
                          type: string
                        managedClusterClientConfig:
                          description: Controller will sync this field to managedcluster's ManagedClusterClientConfigs
                          type: object
                          properties:
                            caBundle:
                              description: CABundle is the ca bundle to connect to apiserver of the managed cluster. System certs are used if it is not set.
                              type: string
                              format: byte
                            url:
                              description: URL is the URL of apiserver endpoint of the managed cluster.
                              type: string
                        upgradeFailed:
                          description: UpgradeFailed indicates whether upgrade of the manage cluster is failed. This is true if the status of Failing condition is True and the version is different with desiredVersion in clusterVersion
                          type: boolean
                        version:
                          description: Version is the current version of the OCP cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim version.openshift.io instead.
                          type: string
                        versionAvailableUpdates:
                          description: VersionAvailableUpdates contains the list of updates that are appropriate for this cluster. This list may be empty if no updates are recommended, if the update service is unavailable, or if an invalid channel has been specified.
                          type: array
                          items:
                            description: OCPVersionRelease represents an OpenShift release image and associated metadata. The original definition is from https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go
                            type: object
                            properties:
                              channels:
                                description: channels is the set of Cincinnati channels to which the release currently belongs.
                                type: array
                                items:
                                  type: string
                              image:
                                description: image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.
                                type: string
                              url:
                                description: url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.
                                type: string
                              version:
                                description: version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.
                                type: string
                        versionHistory:
                          description: VersionHistory contains a list of the most recent versions applied to the cluster. This value may be empty during cluster startup, and then will be updated when a new update is being applied. The newest update is first in the list and it is ordered by recency. Updates in the history have state Completed if the rollout completed - if an update was failing or halfway applied the state will be Partial. Only a limited amount of update history is preserved.
                          type: array
                          items:
                            description: OCPVersionUpdateHistory is a single attempted update to the cluster. the original definition is from https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go
                            type: object
                            properties:
                              image:
                                description: image is a container image location that contains the update. This value is always populated.
                                type: string
                              state:
                                description: state reflects whether the update was fully applied. The Partial state indicates the update is not fully applied, while the Completed state indicates the update was successfully rolled out at least once (all parts of the update successfully applied).
                                type: string
                              verified:
                                description: verified indicates whether the provided update was properly verified before it was installed. If this is false the cluster may not be trusted.
                                type: boolean
                              version:
                                description: version is a semantic versioning identifying the update version. If the requested image does not define a version, or if a failure occurs retrieving the image, this value may be empty.
                                type: string
                    type:
                      description: Type is the distribution type of managed cluster, is OCP currently
                      type: string
                kubeVendor:
                  description: KubeVendor describes the kubernetes provider of the managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim platform.open-cluster-management.io instead.
                  type: string
                loggingEndpoint:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EndpointAddress'
                  description: LoggingEndpoint shows the endpoint to connect to logging server of managed cluster
                loggingPort:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EndpointPort'
                  description: LoggingPort shows the port to connect to logging server of managed cluster
                nodeList:
                  description: NodeList shows a list of the status of nodes
                  type: array
                  items:
                    description: NodeStatus presents the name, labels and conditions of node
                    type: object
                    properties:
                      capacity:
                        description: Capacity represents the total resources of a node. only includes CPU and memory.
                        type: object
                        additionalProperties:
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          anyOf:
                            - type: integer
                            - type: string
                          x-kubernetes-int-or-string: true
                      conditions:
                        description: Conditions is an array of current node conditions. only includes NodeReady.
                        type: array
                        items:
                          type: object
                          properties:
                            status:
                              $ref: '#/definitions/k8s.io~1api~1core~1v1~0ConditionStatus'
                              description: Status of the condition, one of True, False, Unknown.
                            type:
                              $ref: '#/definitions/k8s.io~1api~1core~1v1~0NodeConditionType'
                              description: Type of node condition.
                      labels:
                        description: Labels of node.
                        type: object
                        additionalProperties:
                          type: string
                      name:
                        description: Name of node
                        type: string
                version:
                  description: Version is the kube version of managed cluster.
                  type: string
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
