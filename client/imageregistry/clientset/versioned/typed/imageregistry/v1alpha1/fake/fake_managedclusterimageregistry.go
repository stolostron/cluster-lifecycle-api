// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	imageregistryv1alpha1 "github.com/stolostron/cluster-lifecycle-api/client/imageregistry/clientset/versioned/typed/imageregistry/v1alpha1"
	v1alpha1 "github.com/stolostron/cluster-lifecycle-api/imageregistry/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeManagedClusterImageRegistries implements ManagedClusterImageRegistryInterface
type fakeManagedClusterImageRegistries struct {
	*gentype.FakeClientWithList[*v1alpha1.ManagedClusterImageRegistry, *v1alpha1.ManagedClusterImageRegistryList]
	Fake *FakeImageregistryV1alpha1
}

func newFakeManagedClusterImageRegistries(fake *FakeImageregistryV1alpha1, namespace string) imageregistryv1alpha1.ManagedClusterImageRegistryInterface {
	return &fakeManagedClusterImageRegistries{
		gentype.NewFakeClientWithList[*v1alpha1.ManagedClusterImageRegistry, *v1alpha1.ManagedClusterImageRegistryList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("managedclusterimageregistries"),
			v1alpha1.SchemeGroupVersion.WithKind("ManagedClusterImageRegistry"),
			func() *v1alpha1.ManagedClusterImageRegistry { return &v1alpha1.ManagedClusterImageRegistry{} },
			func() *v1alpha1.ManagedClusterImageRegistryList { return &v1alpha1.ManagedClusterImageRegistryList{} },
			func(dst, src *v1alpha1.ManagedClusterImageRegistryList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ManagedClusterImageRegistryList) []*v1alpha1.ManagedClusterImageRegistry {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.ManagedClusterImageRegistryList, items []*v1alpha1.ManagedClusterImageRegistry) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
