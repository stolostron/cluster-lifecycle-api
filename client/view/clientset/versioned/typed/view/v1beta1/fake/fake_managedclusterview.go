// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	viewv1beta1 "github.com/stolostron/cluster-lifecycle-api/client/view/clientset/versioned/typed/view/v1beta1"
	v1beta1 "github.com/stolostron/cluster-lifecycle-api/view/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeManagedClusterViews implements ManagedClusterViewInterface
type fakeManagedClusterViews struct {
	*gentype.FakeClientWithList[*v1beta1.ManagedClusterView, *v1beta1.ManagedClusterViewList]
	Fake *FakeViewV1beta1
}

func newFakeManagedClusterViews(fake *FakeViewV1beta1, namespace string) viewv1beta1.ManagedClusterViewInterface {
	return &fakeManagedClusterViews{
		gentype.NewFakeClientWithList[*v1beta1.ManagedClusterView, *v1beta1.ManagedClusterViewList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("managedclusterviews"),
			v1beta1.SchemeGroupVersion.WithKind("ManagedClusterView"),
			func() *v1beta1.ManagedClusterView { return &v1beta1.ManagedClusterView{} },
			func() *v1beta1.ManagedClusterViewList { return &v1beta1.ManagedClusterViewList{} },
			func(dst, src *v1beta1.ManagedClusterViewList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.ManagedClusterViewList) []*v1beta1.ManagedClusterView {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.ManagedClusterViewList, items []*v1beta1.ManagedClusterView) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
