// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/stolostron/cluster-lifecycle-api/klusterletconfig/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KlusterletConfigLister helps list KlusterletConfigs.
// All objects returned here must be treated as read-only.
type KlusterletConfigLister interface {
	// List lists all KlusterletConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KlusterletConfig, err error)
	// KlusterletConfigs returns an object that can list and get KlusterletConfigs.
	KlusterletConfigs(namespace string) KlusterletConfigNamespaceLister
	KlusterletConfigListerExpansion
}

// klusterletConfigLister implements the KlusterletConfigLister interface.
type klusterletConfigLister struct {
	indexer cache.Indexer
}

// NewKlusterletConfigLister returns a new KlusterletConfigLister.
func NewKlusterletConfigLister(indexer cache.Indexer) KlusterletConfigLister {
	return &klusterletConfigLister{indexer: indexer}
}

// List lists all KlusterletConfigs in the indexer.
func (s *klusterletConfigLister) List(selector labels.Selector) (ret []*v1alpha1.KlusterletConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KlusterletConfig))
	})
	return ret, err
}

// KlusterletConfigs returns an object that can list and get KlusterletConfigs.
func (s *klusterletConfigLister) KlusterletConfigs(namespace string) KlusterletConfigNamespaceLister {
	return klusterletConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KlusterletConfigNamespaceLister helps list and get KlusterletConfigs.
// All objects returned here must be treated as read-only.
type KlusterletConfigNamespaceLister interface {
	// List lists all KlusterletConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KlusterletConfig, err error)
	// Get retrieves the KlusterletConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KlusterletConfig, error)
	KlusterletConfigNamespaceListerExpansion
}

// klusterletConfigNamespaceLister implements the KlusterletConfigNamespaceLister
// interface.
type klusterletConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KlusterletConfigs in the indexer for a given namespace.
func (s klusterletConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KlusterletConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KlusterletConfig))
	})
	return ret, err
}

// Get retrieves the KlusterletConfig from the indexer for a given namespace and name.
func (s klusterletConfigNamespaceLister) Get(name string) (*v1alpha1.KlusterletConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("klusterletconfig"), name)
	}
	return obj.(*v1alpha1.KlusterletConfig), nil
}
